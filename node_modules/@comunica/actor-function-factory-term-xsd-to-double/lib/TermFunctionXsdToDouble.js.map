{"version":3,"file":"TermFunctionXsdToDouble.js","sourceRoot":"","sources":["TermFunctionXsdToDouble.ts"],"names":[],"mappings":";;;AAAA,yEAAkE;AAKlE,qFAM8C;AAE9C,MAAa,uBAAwB,SAAQ,uCAAgB;IAC3D;QACE,KAAK,CAAC;YACJ,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,oCAAO,CAAC,UAAU;YAC5B,SAAS,EAAE,IAAA,oCAAO,EAAC,oCAAO,CAAC,UAAU,CAAC;iBACnC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,GAAmB,EAAE,EAAE,CAAC,IAAA,mCAAM,EAAC,GAAG,CAAC,UAAU,CAAC,CAAC;iBACjE,eAAe,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAA,mCAAM,EAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACjD,OAAO,CAAC,oCAAO,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,GAAS,EAAE,EAAE;gBAC/C,MAAM,MAAM,GAAG,IAAA,0CAAa,EAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;gBACxC,IAAI,MAAM,KAAK,SAAS,EAAE,CAAC;oBACzB,MAAM,IAAI,sCAAS,CAAC,GAAG,EAAE,oCAAO,CAAC,UAAU,CAAC,CAAC;gBAC/C,CAAC;gBACD,OAAO,IAAA,mCAAM,EAAC,MAAM,CAAC,CAAC;YACxB,CAAC,EAAE,KAAK,CAAC;iBACR,OAAO,EAAE;SACb,CAAC,CAAC;IACL,CAAC;CACF;AAlBD,0DAkBC","sourcesContent":["import { TermFunctionBase } from '@comunica/bus-function-factory';\nimport type {\n  NumericLiteral,\n  Term,\n} from '@comunica/utils-expression-evaluator';\nimport {\n  CastError,\n  declare,\n  double,\n  parseXSDFloat,\n  TypeURL,\n} from '@comunica/utils-expression-evaluator';\n\nexport class TermFunctionXsdToDouble extends TermFunctionBase {\n  public constructor() {\n    super({\n      arity: 1,\n      operator: TypeURL.XSD_DOUBLE,\n      overloads: declare(TypeURL.XSD_DOUBLE)\n        .onNumeric1(() => (val: NumericLiteral) => double(val.typedValue))\n        .onBoolean1Typed(() => val => double(val ? 1 : 0))\n        .onUnary(TypeURL.XSD_STRING, () => (val: Term) => {\n          const result = parseXSDFloat(val.str());\n          if (result === undefined) {\n            throw new CastError(val, TypeURL.XSD_DOUBLE);\n          }\n          return double(result);\n        }, false)\n        .collect(),\n    });\n  }\n}\n"]}