{"version":3,"file":"ActorBindingsAggregatorFactoryAverage.js","sourceRoot":"","sources":["ActorBindingsAggregatorFactoryAverage.ts"],"names":[],"mappings":";;;AAKA,+FAA2F;AAG3F,+DAA0D;AAE1D,yCAAwD;AACxD,qFAAsE;AACtE,2DAAwD;AAMxD;;GAEG;AACH,MAAa,qCAAsC,SAAQ,gEAA8B;IAGvF,YAAmB,IAAgD;QACjE,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,uBAAuB,GAA4B,IAAI,CAAC,uBAAuB,CAAC;IACvF,CAAC;IAEM,KAAK,CAAC,IAAI,CAAC,MAAwC;QACxD,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,KAAK,EAAE,CAAC;YACrC,OAAO,IAAA,eAAQ,EAAC,kDAAkD,CAAC,CAAC;QACtE,CAAC;QACD,OAAO,IAAA,mBAAY,GAAE,CAAC;IACxB,CAAC;IAEM,KAAK,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,IAAI,EAAoC;QAElE,OAAO,IAAI,qCAAiB,CAC1B,MAAM,IAAI,CAAC,kCAAkC,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,EAC5F,IAAI,CAAC,QAAQ,EACb,OAAO,CAAC,OAAO,CAAC,+BAAa,CAAC,WAAW,CAAC,EAC1C,MAAM,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC;YACzC,YAAY,EAAE,2CAAc,CAAC,QAAQ;YACrC,OAAO;YACP,qBAAqB,EAAE,IAAI;SAC5B,CAAC,EACF,MAAM,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC;YACzC,YAAY,EAAE,2CAAc,CAAC,QAAQ;YACrC,OAAO;YACP,qBAAqB,EAAE,IAAI;SAC5B,CAAC,CACH,CAAC;IACJ,CAAC;CACF;AAjCD,sFAiCC","sourcesContent":["import type {\n  IActionBindingsAggregatorFactory,\n  IActorBindingsAggregatorFactoryArgs,\n  IActorBindingsAggregatorFactoryOutput,\n} from '@comunica/bus-bindings-aggregator-factory';\nimport { ActorBindingsAggregatorFactory } from '@comunica/bus-bindings-aggregator-factory';\n\nimport type { MediatorFunctionFactory, MediatorFunctionFactoryUnsafe } from '@comunica/bus-function-factory';\nimport { KeysInitQuery } from '@comunica/context-entries';\nimport type { IActorTest, TestResult } from '@comunica/core';\nimport { failTest, passTestVoid } from '@comunica/core';\nimport { SparqlOperator } from '@comunica/utils-expression-evaluator';\nimport { AverageAggregator } from './AverageAggregator';\n\nexport interface IActorBindingsAggregatorFactoryAverageArgs extends IActorBindingsAggregatorFactoryArgs {\n  mediatorFunctionFactory: MediatorFunctionFactoryUnsafe;\n}\n\n/**\n * A comunica Average Expression Evaluator Aggregate Actor.\n */\nexport class ActorBindingsAggregatorFactoryAverage extends ActorBindingsAggregatorFactory {\n  private readonly mediatorFunctionFactory: MediatorFunctionFactory;\n\n  public constructor(args: IActorBindingsAggregatorFactoryAverageArgs) {\n    super(args);\n    this.mediatorFunctionFactory = <MediatorFunctionFactory>args.mediatorFunctionFactory;\n  }\n\n  public async test(action: IActionBindingsAggregatorFactory): Promise<TestResult<IActorTest>> {\n    if (action.expr.aggregator !== 'avg') {\n      return failTest('This actor only supports the \\'avg\\' aggregator.');\n    }\n    return passTestVoid();\n  }\n\n  public async run({ context, expr }: IActionBindingsAggregatorFactory):\n  Promise<IActorBindingsAggregatorFactoryOutput> {\n    return new AverageAggregator(\n      await this.mediatorExpressionEvaluatorFactory.mediate({ algExpr: expr.expression, context }),\n      expr.distinct,\n      context.getSafe(KeysInitQuery.dataFactory),\n      await this.mediatorFunctionFactory.mediate({\n        functionName: SparqlOperator.ADDITION,\n        context,\n        requireTermExpression: true,\n      }),\n      await this.mediatorFunctionFactory.mediate({\n        functionName: SparqlOperator.DIVISION,\n        context,\n        requireTermExpression: true,\n      }),\n    );\n  }\n}\n"]}