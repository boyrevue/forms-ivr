{"version":3,"file":"ActorHashQuadsMurmur.js","sourceRoot":"","sources":["ActorHashQuadsMurmur.ts"],"names":[],"mappings":";;;AACA,6DAA0D;AAE1D,yCAA8C;AAE9C,oEAAoE;AACpE,MAAM,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAE3C;;GAEG;AACH,MAAa,oBAAqB,SAAQ,+BAAc;IAC/C,KAAK,CAAC,IAAI,CAAC,OAAyB;QACzC,OAAO,IAAA,mBAAY,GAAE,CAAC;IACxB,CAAC;IAEM,KAAK,CAAC,GAAG,CAAC,OAAyB;QACxC,OAAO;YACL,YAAY,EAAE,CAAC,IAAI,EAAE,EAAE;gBACrB,MAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAC7C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBAChC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC7B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC5B,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;YACvB,CAAC;SACF,CAAC;IACJ,CAAC;CACF;AAhBD,oDAgBC","sourcesContent":["import type { IActionHashQuads, IActorHashQuadsOutput } from '@comunica/bus-hash-quads';\nimport { ActorHashQuads } from '@comunica/bus-hash-quads';\nimport type { TestResult, IActorTest } from '@comunica/core';\nimport { passTestVoid } from '@comunica/core';\n\n// eslint-disable-next-line ts/no-require-imports,ts/no-var-requires\nconst MurmurHash3 = require('imurmurhash');\n\n/**\n * A comunica Murmur Hash Quads Actor.\n */\nexport class ActorHashQuadsMurmur extends ActorHashQuads {\n  public async test(_action: IActionHashQuads): Promise<TestResult<IActorTest>> {\n    return passTestVoid();\n  }\n\n  public async run(_action: IActionHashQuads): Promise<IActorHashQuadsOutput> {\n    return {\n      hashFunction: (quad) => {\n        const hash = MurmurHash3(quad.subject.value);\n        hash.hash(quad.predicate.value);\n        hash.hash(quad.object.value);\n        hash.hash(quad.graph.value);\n        return hash.result();\n      },\n    };\n  }\n}\n"]}