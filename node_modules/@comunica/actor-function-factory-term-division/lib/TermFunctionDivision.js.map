{"version":3,"file":"TermFunctionDivision.js","sourceRoot":"","sources":["TermFunctionDivision.ts"],"names":[],"mappings":";;;AAAA,yEAAkE;AAElE,qFAM8C;AAC9C,+CAAyC;AAEzC,MAAa,oBAAqB,SAAQ,uCAAgB;IACxD;QACE,KAAK,CAAC;YACJ,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,2CAAc,CAAC,QAAQ;YACjC,SAAS,EAAE,IAAA,oCAAO,EAAC,2CAAc,CAAC,QAAQ,CAAC;iBACxC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,IAAI,wBAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;iBAC5E,aAAa,CACZ,CAAE,oCAAO,CAAC,WAAW,EAAE,oCAAO,CAAC,WAAW,CAAE,EAC5C,GAAG,EAAE,CAAC,CAAC,IAAY,EAAE,KAAa,EAAE,EAAE;gBACpC,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC;oBAChB,MAAM,IAAI,4CAAe,CAAC,uBAAuB,CAAC,CAAC;gBACrD,CAAC;gBACD,OAAO,IAAA,oCAAO,EAAC,IAAI,wBAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC5D,CAAC,CACF;iBACA,OAAO,EAAE;SACb,CAAC,CAAC;IACL,CAAC;CACF;AAnBD,oDAmBC","sourcesContent":["import { TermFunctionBase } from '@comunica/bus-function-factory';\n\nimport {\n  decimal,\n  declare,\n  ExpressionError,\n  SparqlOperator,\n  TypeURL,\n} from '@comunica/utils-expression-evaluator';\nimport { BigNumber } from 'bignumber.js';\n\nexport class TermFunctionDivision extends TermFunctionBase {\n  public constructor() {\n    super({\n      arity: 2,\n      operator: SparqlOperator.DIVISION,\n      overloads: declare(SparqlOperator.DIVISION)\n        .arithmetic(() => (left, right) => new BigNumber(left).div(right).toNumber())\n        .onBinaryTyped(\n          [ TypeURL.XSD_INTEGER, TypeURL.XSD_INTEGER ],\n          () => (left: number, right: number) => {\n            if (right === 0) {\n              throw new ExpressionError('Integer division by 0');\n            }\n            return decimal(new BigNumber(left).div(right).toNumber());\n          },\n        )\n        .collect(),\n    });\n  }\n}\n"]}