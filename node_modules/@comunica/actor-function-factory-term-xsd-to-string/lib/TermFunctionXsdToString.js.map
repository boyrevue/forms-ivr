{"version":3,"file":"TermFunctionXsdToString.js","sourceRoot":"","sources":["TermFunctionXsdToString.ts"],"names":[],"mappings":";;;AAAA,yEAAkE;AAKlE,qFAM8C;AAE9C;;GAEG;AACH,MAAa,uBAAwB,SAAQ,uCAAgB;IAC3D;QACE,KAAK,CAAC;YACJ,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,oCAAO,CAAC,UAAU;YAC5B,SAAS,EAAE,IAAA,oCAAO,EAAC,oCAAO,CAAC,UAAU,CAAC;iBACnC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,GAAmB,EAAE,EAAE,CAAC,IAAA,mCAAM,EAAC,IAAA,kCAAK,EAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;iBAC9E,eAAe,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAA,mCAAM,EAAC,IAAA,iCAAI,EAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;iBACrD,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,GAAkB,EAAE,EAAE,CAAC,IAAA,mCAAM,EAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;iBACxD,OAAO,EAAE;SACb,CAAC,CAAC;IACL,CAAC;CACF;AAZD,0DAYC","sourcesContent":["import { TermFunctionBase } from '@comunica/bus-function-factory';\nimport type {\n  NumericLiteral,\n  StringLiteral,\n} from '@comunica/utils-expression-evaluator';\nimport {\n  bool,\n  declare,\n  float,\n  string,\n  TypeURL,\n} from '@comunica/utils-expression-evaluator';\n\n/**\n * https://www.w3.org/TR/xpath-functions/#casting-to-string\n */\nexport class TermFunctionXsdToString extends TermFunctionBase {\n  public constructor() {\n    super({\n      arity: 1,\n      operator: TypeURL.XSD_STRING,\n      overloads: declare(TypeURL.XSD_STRING)\n        .onNumeric1(() => (val: NumericLiteral) => string(float(val.typedValue).str()))\n        .onBoolean1Typed(() => val => string(bool(val).str()))\n        .onTerm1(() => (val: StringLiteral) => string(val.str()))\n        .collect(),\n    });\n  }\n}\n"]}