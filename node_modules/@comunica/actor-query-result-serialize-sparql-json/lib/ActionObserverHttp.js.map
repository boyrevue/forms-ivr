{"version":3,"file":"ActionObserverHttp.js","sourceRoot":"","sources":["ActionObserverHttp.ts"],"names":[],"mappings":";;;AAGA,yCAAgD;AAEhD;;GAEG;AACH,MAAa,kBAAmB,SAAQ,qBAA6C;IAKnF,4BAA4B;IAC5B;;OAEG;IACH,YAAmB,IAA6B;QAC9C,KAAK,CAAC,IAAI,CAAC,CAAC;QAPP,aAAQ,GAAG,CAAC,CAAC;QAQlB,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,GAAG,EAAE;YAC9C,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,2BAA2B;IAEpB,KAAK,CACV,KAAkE,EAClE,OAAoB,EACpB,OAAkC;QAElC,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;YAC7C,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC;IACH,CAAC;CACF;AA3BD,gDA2BC","sourcesContent":["import type { IActionHttp, IActorHttpOutput } from '@comunica/bus-http';\nimport type { ActorHttpInvalidateListenable } from '@comunica/bus-http-invalidate';\nimport type { Actor, IActionObserverArgs, IActorTest } from '@comunica/core';\nimport { ActionObserver } from '@comunica/core';\n\n/**\n * Observes HTTP actions, and maintains a counter of the number of requests.\n */\nexport class ActionObserverHttp extends ActionObserver<IActionHttp, IActorHttpOutput> {\n  public readonly httpInvalidator: ActorHttpInvalidateListenable;\n  public readonly observedActors: string[];\n  public requests = 0;\n\n  /* eslint-disable max-len */\n  /**\n   * @param args - @defaultNested {<npmd:@comunica/bus-http/^4.0.0/components/ActorHttp.jsonld#ActorHttp_default_bus>} bus\n   */\n  public constructor(args: IActionObserverHttpArgs) {\n    super(args);\n    this.bus.subscribeObserver(this);\n    this.httpInvalidator.addInvalidateListener(() => {\n      this.requests = 0;\n    });\n  }\n  /* eslint-enable max-len */\n\n  public onRun(\n    actor: Actor<IActionHttp, IActorTest, IActorHttpOutput, undefined>,\n    _action: IActionHttp,\n    _output: Promise<IActorHttpOutput>,\n  ): void {\n    if (this.observedActors.includes(actor.name)) {\n      this.requests++;\n    }\n  }\n}\n\nexport interface IActionObserverHttpArgs extends IActionObserverArgs<IActionHttp, IActorHttpOutput> {\n  /* eslint-disable max-len */\n  /**\n   * An actor that listens to HTTP invalidation events\n   * @default {<default_invalidator> a <npmd:@comunica/bus-http-invalidate/^4.0.0/components/ActorHttpInvalidateListenable.jsonld#ActorHttpInvalidateListenable>}\n   */\n  httpInvalidator: ActorHttpInvalidateListenable;\n  /* eslint-enable max-len */\n  /**\n   * The URIs of the observed actors.\n   * @default {urn:comunica:default:http/actors#fetch}\n   */\n  observedActors: string[];\n}\n"]}