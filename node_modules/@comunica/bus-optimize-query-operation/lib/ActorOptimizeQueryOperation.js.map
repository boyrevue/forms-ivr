{"version":3,"file":"ActorOptimizeQueryOperation.js","sourceRoot":"","sources":["ActorOptimizeQueryOperation.ts"],"names":[],"mappings":";;;AACA,yCAAuC;AAIvC;;;;;;;;;;GAUG;AACH,MAAsB,2BACpB,SAAQ,YAAwF;IAChG;;;;OAIG;IACH,YAAmB,IAA0C;QAC3D,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;CACF;AAVD,kEAUC","sourcesContent":["import type { IAction, IActorArgs, IActorOutput, IActorTest, Mediate } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type { IActionContext } from '@comunica/types';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica actor for optimize-query-operation events.\n *\n * Actor types:\n * * Input:  IActionOptimizeQueryOperation:      An incoming SPARQL operation.\n * * Test:   <none>\n * * Output: IActorOptimizeQueryOperationOutput: A (possibly optimized) outgoing SPARQL operation.\n *\n * @see IActionOptimizeQueryOperation\n * @see IActorOptimizeQueryOperationOutput\n */\nexport abstract class ActorOptimizeQueryOperation<TS = undefined>\n  extends Actor<IActionOptimizeQueryOperation, IActorTest, IActorOptimizeQueryOperationOutput, TS> {\n  /**\n   * @param args -\n   *   \\ @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   *   \\ @defaultNested {Query optimization failed: none of the configured actors were able to optimize} busFailMessage\n   */\n  public constructor(args: IActorOptimizeQueryOperationArgs<TS>) {\n    super(args);\n  }\n}\n\nexport interface IActionOptimizeQueryOperation extends IAction {\n  operation: Algebra.Operation;\n}\n\nexport interface IActorOptimizeQueryOperationOutput extends IActorOutput {\n  operation: Algebra.Operation;\n  context: IActionContext;\n}\n\nexport type IActorOptimizeQueryOperationArgs<TS = undefined> = IActorArgs<\nIActionOptimizeQueryOperation,\nIActorTest,\nIActorOptimizeQueryOperationOutput,\nTS\n>;\n\nexport type MediatorOptimizeQueryOperation = Mediate<\nIActionOptimizeQueryOperation,\nIActorOptimizeQueryOperationOutput\n>;\n"]}