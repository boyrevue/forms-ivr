{"version":3,"file":"TermFunctionNot.js","sourceRoot":"","sources":["TermFunctionNot.ts"],"names":[],"mappings":";;;AAAA,yEAAkE;AAElE,qFAI8C;AAE9C,MAAa,eAAgB,SAAQ,uCAAgB;IACnD;QACE,KAAK,CAAC;YACJ,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,2CAAc,CAAC,GAAG;YAC5B,SAAS,EAAE,IAAA,oCAAO,EAAC,2CAAc,CAAC,GAAG,CAAC;iBACnC,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAA,iCAAI,EAAC,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC;iBAC5C,OAAO,EAAE;SACb,CAAC,CAAC;IACL,CAAC;CACF;AAVD,0CAUC","sourcesContent":["import { TermFunctionBase } from '@comunica/bus-function-factory';\n\nimport {\n  bool,\n  declare,\n  SparqlOperator,\n} from '@comunica/utils-expression-evaluator';\n\nexport class TermFunctionNot extends TermFunctionBase {\n  public constructor() {\n    super({\n      arity: 1,\n      operator: SparqlOperator.NOT,\n      overloads: declare(SparqlOperator.NOT)\n        .onTerm1(() => val => bool(!val.coerceEBV()))\n        .collect(),\n    });\n  }\n}\n"]}