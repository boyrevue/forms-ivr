{"version":3,"file":"ActorHashBindingsMurmur.js","sourceRoot":"","sources":["ActorHashBindingsMurmur.ts"],"names":[],"mappings":";;;AACA,mEAAgE;AAEhE,yCAA8C;AAE9C,oEAAoE;AACpE,MAAM,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAE3C;;GAEG;AACH,MAAa,uBAAwB,SAAQ,qCAAiB;IACrD,KAAK,CAAC,IAAI,CAAC,OAA4B;QAC5C,OAAO,IAAA,mBAAY,GAAE,CAAC;IACxB,CAAC;IAEM,KAAK,CAAC,GAAG,CAAC,OAA4B;QAC3C,OAAO;YACL,YAAY,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,EAAE;gBACpC,IAAI,IAAI,GAAG,WAAW,EAAE,CAAC;gBACzB,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE,CAAC;oBACjC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,KAAK,IAAI,OAAO,CAAC,CAAC;gBAC7D,CAAC;gBACD,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;YACvB,CAAC;SACF,CAAC;IACJ,CAAC;CACF;AAhBD,0DAgBC","sourcesContent":["import type { IActionHashBindings, IActorHashBindingsOutput } from '@comunica/bus-hash-bindings';\nimport { ActorHashBindings } from '@comunica/bus-hash-bindings';\nimport type { TestResult, IActorTest } from '@comunica/core';\nimport { passTestVoid } from '@comunica/core';\n\n// eslint-disable-next-line ts/no-require-imports,ts/no-var-requires\nconst MurmurHash3 = require('imurmurhash');\n\n/**\n * A comunica Murmur Hash Bindings Actor.\n */\nexport class ActorHashBindingsMurmur extends ActorHashBindings {\n  public async test(_action: IActionHashBindings): Promise<TestResult<IActorTest>> {\n    return passTestVoid();\n  }\n\n  public async run(_action: IActionHashBindings): Promise<IActorHashBindingsOutput> {\n    return {\n      hashFunction: (bindings, variables) => {\n        let hash = MurmurHash3();\n        for (const variable of variables) {\n          hash = hash.hash(bindings.get(variable)?.value ?? 'UNDEF');\n        }\n        return hash.result();\n      },\n    };\n  }\n}\n"]}