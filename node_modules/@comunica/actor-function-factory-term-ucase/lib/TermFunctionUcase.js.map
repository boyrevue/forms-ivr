{"version":3,"file":"TermFunctionUcase.js","sourceRoot":"","sources":["TermFunctionUcase.ts"],"names":[],"mappings":";;;AAAA,yEAAkE;AAElE,qFAK8C;AAE9C;;GAEG;AACH,MAAa,iBAAkB,SAAQ,uCAAgB;IACrD;QACE,KAAK,CAAC;YACJ,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,2CAAc,CAAC,KAAK;YAC9B,SAAS,EAAE,IAAA,oCAAO,EAAC,2CAAc,CAAC,KAAK,CAAC;iBACrC,cAAc,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAA,mCAAM,EAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;iBACtD,aAAa,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAA,uCAAU,EAAC,GAAG,CAAC,UAAU,CAAC,WAAW,EAAE,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;iBAClF,OAAO,EAAE;SACb,CAAC,CAAC;IACL,CAAC;CACF;AAXD,8CAWC","sourcesContent":["import { TermFunctionBase } from '@comunica/bus-function-factory';\n\nimport {\n  declare,\n  langString,\n  SparqlOperator,\n  string,\n} from '@comunica/utils-expression-evaluator';\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-ucase\n */\nexport class TermFunctionUcase extends TermFunctionBase {\n  public constructor() {\n    super({\n      arity: 1,\n      operator: SparqlOperator.UCASE,\n      overloads: declare(SparqlOperator.UCASE)\n        .onString1Typed(() => lit => string(lit.toUpperCase()))\n        .onLangString1(() => lit => langString(lit.typedValue.toUpperCase(), lit.language))\n        .collect(),\n    });\n  }\n}\n"]}