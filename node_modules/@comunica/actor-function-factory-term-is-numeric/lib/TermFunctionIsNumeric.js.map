{"version":3,"file":"TermFunctionIsNumeric.js","sourceRoot":"","sources":["TermFunctionIsNumeric.ts"],"names":[],"mappings":";;;AAAA,yEAAkE;AAElE,qFAI8C;AAE9C;;GAEG;AACH,MAAa,qBAAsB,SAAQ,uCAAgB;IACzD;QACE,KAAK,CAAC;YACJ,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,2CAAc,CAAC,UAAU;YACnC,SAAS,EAAE,IAAA,oCAAO,EAAC,2CAAc,CAAC,UAAU,CAAC;iBAC1C,UAAU,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,IAAA,iCAAI,EAAC,IAAI,CAAC,CAAC;iBAClC,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,IAAA,iCAAI,EAAC,KAAK,CAAC,CAAC;iBAChC,OAAO,EAAE;SACb,CAAC,CAAC;IACL,CAAC;CACF;AAXD,sDAWC","sourcesContent":["import { TermFunctionBase } from '@comunica/bus-function-factory';\n\nimport {\n  bool,\n  declare,\n  SparqlOperator,\n} from '@comunica/utils-expression-evaluator';\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-isNumeric\n */\nexport class TermFunctionIsNumeric extends TermFunctionBase {\n  public constructor() {\n    super({\n      arity: 1,\n      operator: SparqlOperator.IS_NUMERIC,\n      overloads: declare(SparqlOperator.IS_NUMERIC)\n        .onNumeric1(() => () => bool(true))\n        .onTerm1(() => () => bool(false))\n        .collect(),\n    });\n  }\n}\n"]}