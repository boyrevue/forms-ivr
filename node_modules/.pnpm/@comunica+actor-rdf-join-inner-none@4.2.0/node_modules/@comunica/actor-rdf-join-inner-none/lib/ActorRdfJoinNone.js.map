{"version":3,"file":"ActorRdfJoinNone.js","sourceRoot":"","sources":["ActorRdfJoinNone.ts"],"names":[],"mappings":";;;AAOA,yDAAsD;AACtD,+DAA0D;AAE1D,yCAAgE;AAGhE,6EAAmE;AACnE,6DAAmE;AAEnE,iDAA8C;AAE9C;;GAEG;AACH,MAAa,gBAAiB,SAAQ,2BAAY;IAGhD,YAAmB,IAA2B;QAC5C,KAAK,CAAC,IAAI,EAAE;YACV,WAAW,EAAE,OAAO;YACpB,YAAY,EAAE,MAAM;YACpB,YAAY,EAAE,CAAC;SAChB,CAAC,CAAC;IACL,CAAC;IAEe,KAAK,CAAC,IAAI,CACxB,MAAsB;QAEtB,uCAAuC;QACvC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC9B,OAAO,IAAA,eAAQ,EAAC,SAAS,IAAI,CAAC,IAAI,6BAA6B,CAAC,CAAC;QACnE,CAAC;QACD,OAAO,MAAM,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,SAAU,CAAC,CAAC;IAC5D,CAAC;IAES,KAAK,CAAC,SAAS,CAAC,MAAsB;QAC9C,MAAM,WAAW,GAAwB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,+BAAa,CAAC,WAAW,CAAC,CAAC;QAC3F,MAAM,eAAe,GAAG,MAAM,wCAAe,CAAC,MAAM,CAClD,IAAI,CAAC,4BAA4B,EACjC,MAAM,CAAC,OAAO,EACd,WAAW,CACZ,CAAC;QACF,OAAO;YACL,MAAM,EAAE;gBACN,cAAc,EAAE,IAAI,6BAAa,CAAe,CAAE,eAAe,CAAC,QAAQ,EAAE,CAAE,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;gBACrG,QAAQ,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;oBAC9B,KAAK,EAAE,IAAI,wCAAuB,EAAE;oBACpC,WAAW,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE;oBACxC,SAAS,EAAE,EAAE;iBACd,CAAC;gBACF,IAAI,EAAE,UAAU;aACjB;SACF,CAAC;IACJ,CAAC;IAES,KAAK,CAAC,mBAAmB,CACjC,MAAsB,EACtB,QAAmC;QAEnC,OAAO,IAAA,2BAAoB,EAAC;YAC1B,UAAU,EAAE,CAAC;YACb,cAAc,EAAE,CAAC;YACjB,aAAa,EAAE,CAAC;YAChB,WAAW,EAAE,CAAC;SACf,EAAE,QAAQ,CAAC,CAAC;IACf,CAAC;CACF;AApDD,4CAoDC","sourcesContent":["import type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type {\n  IActionRdfJoin,\n  IActorRdfJoinOutputInner,\n  IActorRdfJoinArgs,\n  IActorRdfJoinTestSideData,\n} from '@comunica/bus-rdf-join';\nimport { ActorRdfJoin } from '@comunica/bus-rdf-join';\nimport { KeysInitQuery } from '@comunica/context-entries';\nimport type { TestResult } from '@comunica/core';\nimport { passTestWithSideData, failTest } from '@comunica/core';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\nimport type { ComunicaDataFactory } from '@comunica/types';\nimport { BindingsFactory } from '@comunica/utils-bindings-factory';\nimport { MetadataValidationState } from '@comunica/utils-metadata';\nimport type * as RDF from '@rdfjs/types';\nimport { ArrayIterator } from 'asynciterator';\n\n/**\n * A comunica None RDF Join Actor.\n */\nexport class ActorRdfJoinNone extends ActorRdfJoin {\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n  public constructor(args: IActorRdfJoinNoneArgs) {\n    super(args, {\n      logicalType: 'inner',\n      physicalName: 'none',\n      limitEntries: 0,\n    });\n  }\n\n  public override async test(\n    action: IActionRdfJoin,\n  ): Promise<TestResult<IMediatorTypeJoinCoefficients, IActorRdfJoinTestSideData>> {\n    // Allow joining of one or zero streams\n    if (action.entries.length > 0) {\n      return failTest(`Actor ${this.name} can only join zero entries`);\n    }\n    return await this.getJoinCoefficients(action, undefined!);\n  }\n\n  protected async getOutput(action: IActionRdfJoin): Promise<IActorRdfJoinOutputInner> {\n    const dataFactory: ComunicaDataFactory = action.context.getSafe(KeysInitQuery.dataFactory);\n    const bindingsFactory = await BindingsFactory.create(\n      this.mediatorMergeBindingsContext,\n      action.context,\n      dataFactory,\n    );\n    return {\n      result: {\n        bindingsStream: new ArrayIterator<RDF.Bindings>([ bindingsFactory.bindings() ], { autoStart: false }),\n        metadata: () => Promise.resolve({\n          state: new MetadataValidationState(),\n          cardinality: { type: 'exact', value: 1 },\n          variables: [],\n        }),\n        type: 'bindings',\n      },\n    };\n  }\n\n  protected async getJoinCoefficients(\n    action: IActionRdfJoin,\n    sideData: IActorRdfJoinTestSideData,\n  ): Promise<TestResult<IMediatorTypeJoinCoefficients, IActorRdfJoinTestSideData>> {\n    return passTestWithSideData({\n      iterations: 0,\n      persistedItems: 0,\n      blockingItems: 0,\n      requestTime: 0,\n    }, sideData);\n  }\n}\n\nexport interface IActorRdfJoinNoneArgs extends IActorRdfJoinArgs {\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n}\n"]}