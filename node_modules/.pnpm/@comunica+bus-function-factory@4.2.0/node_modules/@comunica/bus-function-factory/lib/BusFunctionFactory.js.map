{"version":3,"file":"BusFunctionFactory.js","sourceRoot":"","sources":["BusFunctionFactory.ts"],"names":[],"mappings":";;;AACA,yCAA4C;AAG5C;;;;;GAKG;AACH,MAAa,kBACX,SAAQ,iBAAiG;IACzG,YAAmB,IAAc;QAC/B,KAAK,CAAC;YACJ,GAAG,IAAI;YACP,qBAAqB,EAAE,CAAE,eAAe,CAAE;YAC1C,sBAAsB,EAAE,CAAE,cAAc,CAAE;SAC3C,CAAC,CAAC;IACL,CAAC;CACF;AATD,gDASC","sourcesContent":["import type { IActorTest, IBusArgs } from '@comunica/core';\nimport { BusIndexed } from '@comunica/core';\nimport type { ActorFunctionFactory, IActionFunctionFactory, IActorFunctionFactoryOutput } from './ActorFunctionFactory';\n\n/**\n * Bus inspired by BusIndexed but specific for function factory.\n *\n * The implementation differs. In BusIndexed, each actor is indexed only once.\n * Here, a single actor can be indexed multiple times (max 2).\n */\nexport class BusFunctionFactory\n  extends BusIndexed<ActorFunctionFactory, IActionFunctionFactory, IActorTest, IActorFunctionFactoryOutput> {\n  public constructor(args: IBusArgs) {\n    super({\n      ...args,\n      actorIdentifierFields: [ 'functionNames' ],\n      actionIdentifierFields: [ 'functionName' ],\n    });\n  }\n}\n"]}