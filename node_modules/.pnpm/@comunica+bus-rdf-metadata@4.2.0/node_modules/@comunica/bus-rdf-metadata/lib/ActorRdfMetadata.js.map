{"version":3,"file":"ActorRdfMetadata.js","sourceRoot":"","sources":["ActorRdfMetadata.ts"],"names":[],"mappings":";;;AACA,yCAAuC;AAGvC;;;;;;;;;;GAUG;AACH,MAAsB,gBACpB,SAAQ,YAAkE;IAC1E,4BAA4B;IAC5B;;;;OAIG;IACH,2BAA2B;IAC3B,YAAmB,IAA+B;QAChD,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;CACF;AAZD,4CAYC","sourcesContent":["import type { IAction, IActorArgs, IActorOutput, IActorTest, Mediate } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type * as RDF from '@rdfjs/types';\n\n/**\n * A comunica actor for rdf-metadata events.\n *\n * Actor types:\n * * Input:  IActionRdfMetadata:      An RDF quad stream.\n * * Test:   <none>\n * * Output: IActorRdfMetadataOutput: An RDF quad data stream and RDF quad metadata stream.\n *\n * @see IActionDereferenceRdf\n * @see IActorDereferenceRdfOutput\n */\nexport abstract class ActorRdfMetadata<TS = undefined>\n  extends Actor<IActionRdfMetadata, IActorTest, IActorRdfMetadataOutput, TS> {\n  /* eslint-disable max-len */\n  /**\n   * @param args -\n   *   \\ @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   *   \\ @defaultNested {Metadata splicing failed: none of the configured actors were able to splice metadata from ${action.url}} busFailMessage\n   */\n  /* eslint-enable max-len */\n  public constructor(args: IActorRdfMetadataArgs<TS>) {\n    super(args);\n  }\n}\n\nexport interface IActionRdfMetadata extends IAction {\n  /**\n   * The page URL from which the quads were retrieved.\n   */\n  url: string;\n  /**\n   * A quad stream.\n   */\n  quads: RDF.Stream;\n  /**\n   * An optional field indicating if the given quad stream originates from a triple-based serialization,\n   * in which everything is serialized in the default graph.\n   * If falsy, the quad stream contain actual quads, otherwise they should be interpreted as triples.\n   */\n  triples?: boolean;\n}\n\nexport interface IActorRdfMetadataOutput extends IActorOutput {\n  /**\n   * The resulting quad data stream.\n   */\n  data: RDF.Stream;\n  /**\n   * The resulting quad metadata stream.\n   */\n  metadata: RDF.Stream;\n}\n\nexport type IActorRdfMetadataArgs<TS = undefined> =\n  IActorArgs<IActionRdfMetadata, IActorTest, IActorRdfMetadataOutput, TS>;\n\nexport type MediatorRdfMetadata = Mediate<IActionRdfMetadata, IActorRdfMetadataOutput>;\n"]}