{"version":3,"file":"ActorFunctionFactoryTermXsdToDecimal.js","sourceRoot":"","sources":["ActorFunctionFactoryTermXsdToDecimal.ts"],"names":[],"mappings":";;;AAMA,yEAEwC;AACxC,qFAA+D;AAC/D,yEAAsE;AAEtE;;GAEG;AACH,MAAa,oCAAqC,SAAQ,oDAA6B;IACrF,YAAmB,IAA+B;QAChD,KAAK,CAAC;YACJ,GAAG,IAAI;YACP,aAAa,EAAE,CAAE,oCAAO,CAAC,WAAW,CAAE;YACtC,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;IACL,CAAC;IAEM,KAAK,CAAC,GAAG,CAAmC,CAAI;QAErD,OAAO,IAAI,mDAAwB,EAAE,CAAC;IACxC,CAAC;CACF;AAbD,oFAaC","sourcesContent":["import type {\n  IActionFunctionFactory,\n  IActorFunctionFactoryArgs,\n  IActorFunctionFactoryOutput,\n  IActorFunctionFactoryOutputTerm,\n} from '@comunica/bus-function-factory';\nimport {\n  ActorFunctionFactoryDedicated,\n} from '@comunica/bus-function-factory';\nimport { TypeURL } from '@comunica/utils-expression-evaluator';\nimport { TermFunctionXsdToDecimal } from './TermFunctionXsdToDecimal';\n\n/**\n * A comunica TermFunctionXsdToDecimal Function Factory Actor.\n */\nexport class ActorFunctionFactoryTermXsdToDecimal extends ActorFunctionFactoryDedicated {\n  public constructor(args: IActorFunctionFactoryArgs) {\n    super({\n      ...args,\n      functionNames: [ TypeURL.XSD_DECIMAL ],\n      termFunction: true,\n    });\n  }\n\n  public async run<T extends IActionFunctionFactory>(_: T):\n  Promise<T extends { requireTermExpression: true } ? IActorFunctionFactoryOutputTerm : IActorFunctionFactoryOutput> {\n    return new TermFunctionXsdToDecimal();\n  }\n}\n"]}