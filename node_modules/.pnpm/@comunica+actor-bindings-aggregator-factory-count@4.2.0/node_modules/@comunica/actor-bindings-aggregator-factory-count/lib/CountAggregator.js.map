{"version":3,"file":"CountAggregator.js","sourceRoot":"","sources":["CountAggregator.ts"],"names":[],"mappings":";;;AACA,+FAA+E;AAE/E,qFAA6E;AAG7E,MAAa,eAAgB,SAAQ,oDAAkB;IAErD,YAAmB,SAA+B,EAAE,QAAiB,EAAE,UAAoB;QACzF,KAAK,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;QAFjC,UAAK,GAAuB,SAAS,CAAC;IAG9C,CAAC;IAEe,cAAc;QAC5B,OAAO,IAAA,yCAAY,EAAC,GAAG,EAAE,oCAAO,CAAC,WAAW,CAAC,CAAC;IAChD,CAAC;IAES,OAAO,CAAC,CAAW;QAC3B,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;YAC7B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAES,UAAU;QAClB,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;YAC7B,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;QAC3B,CAAC;QACD,OAAO,IAAA,yCAAY,EAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,oCAAO,CAAC,WAAW,CAAC,CAAC;IAC/D,CAAC;CACF;AAvBD,0CAuBC","sourcesContent":["import type { IBindingsAggregator } from '@comunica/bus-bindings-aggregator-factory';\nimport { AggregateEvaluator } from '@comunica/bus-bindings-aggregator-factory';\nimport type { IExpressionEvaluator } from '@comunica/types';\nimport { typedLiteral, TypeURL } from '@comunica/utils-expression-evaluator';\nimport type * as RDF from '@rdfjs/types';\n\nexport class CountAggregator extends AggregateEvaluator implements IBindingsAggregator {\n  private state: number | undefined = undefined;\n  public constructor(evaluator: IExpressionEvaluator, distinct: boolean, throwError?: boolean) {\n    super(evaluator, distinct, throwError);\n  }\n\n  public override emptyValueTerm(): RDF.Term {\n    return typedLiteral('0', TypeURL.XSD_INTEGER);\n  }\n\n  protected putTerm(_: RDF.Term): void {\n    if (this.state === undefined) {\n      this.state = 0;\n    }\n    this.state++;\n  }\n\n  protected termResult(): RDF.Term | undefined {\n    if (this.state === undefined) {\n      return this.emptyValue();\n    }\n    return typedLiteral(String(this.state), TypeURL.XSD_INTEGER);\n  }\n}\n"]}