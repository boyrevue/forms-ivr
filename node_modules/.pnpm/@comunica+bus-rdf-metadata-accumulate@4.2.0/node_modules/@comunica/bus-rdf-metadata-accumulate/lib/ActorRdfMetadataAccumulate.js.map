{"version":3,"file":"ActorRdfMetadataAccumulate.js","sourceRoot":"","sources":["ActorRdfMetadataAccumulate.ts"],"names":[],"mappings":";;;AACA,yCAAuC;AAGvC;;;;;;;;;;;GAWG;AACH,MAAsB,0BACpB,SAAQ,YAAsF;IAC9F,4BAA4B;IAC5B;;;;OAIG;IACH,2BAA2B;IAC3B,YAAmB,IAAyC;QAC1D,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;CACF;AAZD,gEAYC","sourcesContent":["import type { IAction, IActorArgs, IActorOutput, IActorTest, Mediate } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type { MetadataBindings } from '@comunica/types';\n\n/**\n * A comunica actor for rdf-metadata-accumulate events.\n *\n * Actor types:\n * * Input:  IActionRdfMetadataAccumulate:      The metadata objects to accumulate,\n *                                              or a trigger for initializing a new value.\n * * Test:   <none>\n * * Output: IActorRdfMetadataAccumulateOutput: The accumulated metadata object.\n *\n * @see IActionRdfMetadataAccumulate\n * @see IActorRdfMetadataAccumulateOutput\n */\nexport abstract class ActorRdfMetadataAccumulate<TS = undefined>\n  extends Actor<IActionRdfMetadataAccumulate, IActorTest, IActorRdfMetadataAccumulateOutput, TS> {\n  /* eslint-disable max-len */\n  /**\n   * @param args -\n   *   \\ @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   *   \\ @defaultNested {Metadata accumulation failed: none of the configured actors were able to accumulate metadata in mode ${action.mode}} busFailMessage\n   */\n  /* eslint-enable max-len */\n  public constructor(args: IActorRdfMetadataAccumulateArgs<TS>) {\n    super(args);\n  }\n}\n\nexport type IActionRdfMetadataAccumulate = IActionRdfMetadataAccumulateInitialize | IActionRdfMetadataAccumulateAppend;\n\nexport interface IActionRdfMetadataAccumulateInitialize extends IAction {\n  /**\n   * Indicates that metadata fields should be initialized to default values.\n   */\n  mode: 'initialize';\n}\n\nexport interface IActionRdfMetadataAccumulateAppend extends IAction {\n  /**\n   * Indicates that metadata fields should be accumulated.\n   * The initialize step is guaranteed to have been called before this on the `accumulatedMetadata` object.\n   */\n  mode: 'append';\n  /**\n   * The metadata object that already has some accumulated fields.\n   * This object should not be mutated.\n   */\n  accumulatedMetadata: MetadataBindings;\n  /**\n   * The metadata object with fields to append.\n   * This object should not be mutated.\n   */\n  appendingMetadata: MetadataBindings;\n}\n\nexport interface IActorRdfMetadataAccumulateOutput extends IActorOutput {\n  /**\n   * The initialized or accumulated metadata object.\n   * This should only contain those fields that are applicable to this actor.\n   */\n  metadata: Partial<MetadataBindings>;\n}\n\nexport type IActorRdfMetadataAccumulateArgs<TS = undefined> = IActorArgs<\nIActionRdfMetadataAccumulate,\nIActorTest,\nIActorRdfMetadataAccumulateOutput,\nTS\n>;\n\nexport type MediatorRdfMetadataAccumulate = Mediate<\nIActionRdfMetadataAccumulate,\nIActorRdfMetadataAccumulateOutput\n>;\n"]}