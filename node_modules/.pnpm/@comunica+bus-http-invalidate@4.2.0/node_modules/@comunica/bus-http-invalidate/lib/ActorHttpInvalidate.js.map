{"version":3,"file":"ActorHttpInvalidate.js","sourceRoot":"","sources":["ActorHttpInvalidate.ts"],"names":[],"mappings":";;;AACA,yCAAuC;AAEvC;;;;;;;;;;GAUG;AACH,MAAsB,mBACpB,SAAQ,YAAwE;IAChF,4BAA4B;IAC5B;;;;OAIG;IACH,2BAA2B;IAC3B,YAAmB,IAAkC;QACnD,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;CACF;AAZD,kDAYC","sourcesContent":["import type { IAction, IActorArgs, IActorOutput, IActorTest, Mediate } from '@comunica/core';\nimport { Actor } from '@comunica/core';\n\n/**\n * A comunica actor for http-invalidate events.\n *\n * Actor types:\n * * Input:  IActionHttpInvalidate:      An action for invalidating the cached contents of given URL.\n * * Test:   <none>\n * * Output: IActorHttpInvalidateOutput: An empty response.\n *\n * @see IActionHttpInvalidate\n * @see IActorHttpInvalidateOutput\n */\nexport abstract class ActorHttpInvalidate<TS = undefined>\n  extends Actor<IActionHttpInvalidate, IActorTest, IActorHttpInvalidateOutput, TS> {\n  /* eslint-disable max-len */\n  /**\n   * @param args -\n   *   \\ @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   *   \\ @defaultNested {HTTP invalidation failed: none of the configured actors were able to invalidate ${action.url}} busFailMessage\n   */\n  /* eslint-enable max-len */\n  public constructor(args: IActorHttpInvalidateArgs<TS>) {\n    super(args);\n  }\n}\n\nexport interface IActionHttpInvalidate extends IAction {\n  /**\n   * The URL that requires invalidation.\n   * If not provided, then _all_ URLs need to be invalidated.\n   */\n  url?: string;\n}\n\nexport interface IActorHttpInvalidateOutput extends IActorOutput {\n\n}\n\nexport type IActorHttpInvalidateArgs<TS = undefined> =\n  IActorArgs<IActionHttpInvalidate, IActorTest, IActorHttpInvalidateOutput, TS>;\n\nexport type MediatorHttpInvalidate = Mediate<IActionHttpInvalidate, IActorHttpInvalidateOutput>;\n"]}