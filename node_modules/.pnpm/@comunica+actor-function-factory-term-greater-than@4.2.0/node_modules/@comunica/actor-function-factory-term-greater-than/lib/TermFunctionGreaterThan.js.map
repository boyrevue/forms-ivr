{"version":3,"file":"TermFunctionGreaterThan.js","sourceRoot":"","sources":["TermFunctionGreaterThan.ts"],"names":[],"mappings":";;;AACA,yEAAkE;AAElE,qFAG8C;AAE9C,MAAa,uBAAwB,SAAQ,uCAAgB;IAC3D,YAAoC,gBAA+B;QACjE,KAAK,CAAC;YACJ,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,2CAAc,CAAC,EAAE;YAC3B,SAAS,EAAE,IAAA,oCAAO,EAAC,2CAAc,CAAC,EAAE,CAAC;iBAClC,GAAG,CAAC,CAAE,MAAM,EAAE,MAAM,CAAE,EAAE,mBAAmB,CAAC,EAAE,CAC7C,CAAC,CAAE,KAAK,EAAE,MAAM,CAAE,EAAE,EAAE;YACtB,iBAAiB;YACf,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAE,MAAM,EAAE,KAAK,CAAE,EAAE,mBAAmB,CAAC,CAAC;iBAC9E,OAAO,EAAE;SACb,CAAC,CAAC;QAV+B,qBAAgB,GAAhB,gBAAgB,CAAe;IAWnE,CAAC;CACF;AAbD,0DAaC","sourcesContent":["import type { ITermFunction } from '@comunica/bus-function-factory';\nimport { TermFunctionBase } from '@comunica/bus-function-factory';\n\nimport {\n  declare,\n  SparqlOperator,\n} from '@comunica/utils-expression-evaluator';\n\nexport class TermFunctionGreaterThan extends TermFunctionBase {\n  public constructor(private readonly lessThanFunction: ITermFunction) {\n    super({\n      arity: 2,\n      operator: SparqlOperator.GT,\n      overloads: declare(SparqlOperator.GT)\n        .set([ 'term', 'term' ], expressionEvaluator =>\n          ([ first, second ]) =>\n          // X < Y -> Y > X\n            this.lessThanFunction.applyOnTerms([ second, first ], expressionEvaluator))\n        .collect(),\n    });\n  }\n}\n"]}