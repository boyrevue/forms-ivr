{"version":3,"file":"bindingsToString.js","sourceRoot":"","sources":["bindingsToString.ts"],"names":[],"mappings":";;;AACA,2CAA0C;AAE1C;;;GAGG;AACH,SAAgB,gBAAgB,CAAC,QAAsB;IACrD,MAAM,GAAG,GAA2B,EAAE,CAAC;IACvC,KAAK,MAAM,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC;QAClC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAA,yBAAY,EAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;IACpD,CAAC;IACD,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACzC,CAAC;AAND,4CAMC;AAED;;;;;;;;;;GAUG;AACH,SAAgB,uBAAuB,CAAC,QAAsB,EAAE,SAAyB;IACvF,OAAO,SAAS;SACb,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE;QAChB,MAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAI,IAAI,EAAE,CAAC;YACT,OAAO,IAAA,yBAAY,EAAC,IAAI,CAAC,CAAC;QAC5B,CAAC;QACD,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC;SACD,IAAI,CAAC,EAAE,CAAC,CAAC;AACd,CAAC;AAVD,0DAUC","sourcesContent":["import type * as RDF from '@rdfjs/types';\nimport { termToString } from 'rdf-string';\n\n/**\n * Convert a bindings object to a human-readable string.\n * @param bindings A bindings object.\n */\nexport function bindingsToString(bindings: RDF.Bindings): string {\n  const raw: Record<string, string> = {};\n  for (const key of bindings.keys()) {\n    raw[key.value] = termToString(bindings.get(key))!;\n  }\n  return JSON.stringify(raw, null, '  ');\n}\n\n/**\n * Convert a bindings object to a compact string.\n * This is mainly useful for internal indexing purposes.\n *\n * This function is guaranteed to not produce clashing bindings for unequal terms.\n *\n * This function will not sort the variables and expects them to be in the same order for every call.\n *\n * @param bindings A bindings object.\n * @param variables The variables to consider when converting the bindings to a string.\n */\nexport function bindingsToCompactString(bindings: RDF.Bindings, variables: RDF.Variable[]): string {\n  return variables\n    .map((variable) => {\n      const term = bindings.get(variable);\n      if (term) {\n        return termToString(term);\n      }\n      return '';\n    })\n    .join('');\n}\n"]}