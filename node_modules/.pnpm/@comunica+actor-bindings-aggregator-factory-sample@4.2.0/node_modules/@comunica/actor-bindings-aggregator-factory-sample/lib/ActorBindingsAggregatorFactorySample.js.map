{"version":3,"file":"ActorBindingsAggregatorFactorySample.js","sourceRoot":"","sources":["ActorBindingsAggregatorFactorySample.ts"],"names":[],"mappings":";;;AAKA,+FAEmD;AAEnD,yCAAwD;AACxD,yDAAsD;AAEtD;;GAEG;AACH,MAAa,oCAAqC,SAAQ,gEAA8B;IACtF,YAAmB,IAAyC;QAC1D,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,IAAI,CAAC,MAAwC;QACxD,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,QAAQ,EAAE,CAAC;YACxC,OAAO,IAAA,eAAQ,EAAC,qDAAqD,CAAC,CAAC;QACzE,CAAC;QACD,OAAO,IAAA,mBAAY,GAAE,CAAC;IACxB,CAAC;IAEM,KAAK,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,IAAI,EAAoC;QAElE,OAAO,IAAI,mCAAgB,CACzB,MAAM,IAAI,CAAC,kCAAkC,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,EAC5F,IAAI,CAAC,QAAQ,CACd,CAAC;IACJ,CAAC;CACF;AAnBD,oFAmBC","sourcesContent":["import type {\n  IActionBindingsAggregatorFactory,\n  IActorBindingsAggregatorFactoryArgs,\n  IActorBindingsAggregatorFactoryOutput,\n} from '@comunica/bus-bindings-aggregator-factory';\nimport {\n  ActorBindingsAggregatorFactory,\n} from '@comunica/bus-bindings-aggregator-factory';\nimport type { IActorTest, TestResult } from '@comunica/core';\nimport { failTest, passTestVoid } from '@comunica/core';\nimport { SampleAggregator } from './SampleAggregator';\n\n/**\n * A comunica Sample Expression Evaluator Aggregate Actor.\n */\nexport class ActorBindingsAggregatorFactorySample extends ActorBindingsAggregatorFactory {\n  public constructor(args: IActorBindingsAggregatorFactoryArgs) {\n    super(args);\n  }\n\n  public async test(action: IActionBindingsAggregatorFactory): Promise<TestResult<IActorTest>> {\n    if (action.expr.aggregator !== 'sample') {\n      return failTest('This actor only supports the \\'sample\\' aggregator.');\n    }\n    return passTestVoid();\n  }\n\n  public async run({ context, expr }: IActionBindingsAggregatorFactory):\n  Promise<IActorBindingsAggregatorFactoryOutput> {\n    return new SampleAggregator(\n      await this.mediatorExpressionEvaluatorFactory.mediate({ algExpr: expr.expression, context }),\n      expr.distinct,\n    );\n  }\n}\n"]}