{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;AAAA,kEAAiE;AAAxD,kHAAA,eAAe,OAAA;AACxB,yDAEkC;AADhC,4GAAA,YAAY,OAAA;AAEd,0CAA+D;AAAtD,wHAAA,6BAA6B,OAAA;AACtC,+CAY6B;AAX3B,kGAAA,OAAO,OAAA;AACP,+FAAA,IAAI,OAAA;AACJ,iGAAA,MAAM,OAAA;AACN,iGAAA,MAAM,OAAA;AACN,kGAAA,OAAO,OAAA;AACP,mGAAA,QAAQ,OAAA;AACR,qGAAA,UAAU,OAAA;AACV,kGAAA,OAAO,OAAA;AACP,gGAAA,KAAK,OAAA;AACL,0GAAA,eAAe,OAAA;AACf,kGAAA,OAAO,OAAA;AAET,wCAgBuB;AAfrB,yGAAA,eAAe,OAAA;AACf,2GAAA,iBAAiB,OAAA;AACjB,6GAAA,mBAAmB,OAAA;AACnB,2GAAA,iBAAiB,OAAA;AACjB,uHAAA,6BAA6B,OAAA;AAC7B,6GAAA,mBAAmB,OAAA;AACnB,8GAAA,oBAAoB,OAAA;AACpB,uGAAA,aAAa,OAAA;AACb,iGAAA,OAAO,OAAA;AACP,sGAAA,YAAY,OAAA;AACZ,8GAAA,oBAAoB,OAAA;AACpB,mGAAA,SAAS,OAAA;AACT,gHAAA,sBAAsB,OAAA;AACtB,4GAAA,kBAAkB,OAAA;AAClB,sGAAA,YAAY,OAAA;AAEd,wCASuB;AARrB,sGAAA,YAAY,OAAA;AACZ,iGAAA,OAAO,OAAA;AACP,mGAAA,SAAS,OAAA;AACT,wGAAA,cAAc,OAAA;AAMhB,oDAAkD;AAAzC,2GAAA,WAAW,OAAA;AACpB,0DAWgC;AAV9B,4HAAA,yBAAyB,OAAA;AACzB,kIAAA,+BAA+B,OAAA;AAC/B,yIAAA,sCAAsC,OAAA;AACtC,kIAAA,+BAA+B,OAAA;AAC/B,2IAAA,wCAAwC,OAAA;AACxC,qHAAA,kBAAkB,OAAA;AAClB,iHAAA,cAAc,OAAA;AACd,2HAAA,wBAAwB,OAAA;AACxB,4GAAA,SAAS,OAAA;AACT,6HAAA,0BAA0B,OAAA;AAE5B,6CA2BuB;AA1BrB,8GAAA,eAAe,OAAA;AACf,qHAAA,sBAAsB,OAAA;AACtB,0GAAA,WAAW,OAAA;AACX,8GAAA,eAAe,OAAA;AACf,0GAAA,WAAW,OAAA;AACX,gHAAA,iBAAiB,OAAA;AACjB,mGAAA,IAAI,OAAA;AACJ,uHAAA,wBAAwB,OAAA;AACxB,mGAAA,IAAI,OAAA;AACJ,uGAAA,QAAQ,OAAA;AACR,wGAAA,SAAS,OAAA;AACT,uGAAA,QAAQ,OAAA;AACR,6GAAA,cAAc,OAAA;AACd,6GAAA,cAAc,OAAA;AACd,wGAAA,SAAS,OAAA;AACT,6GAAA,cAAc,OAAA;AACd,2GAAA,YAAY,OAAA;AACZ,4GAAA,aAAa,OAAA;AACb,wGAAA,SAAS,OAAA;AACT,wGAAA,SAAS,OAAA;AACT,sGAAA,OAAO,OAAA;AACP,6GAAA,cAAc,OAAA;AACd,2GAAA,YAAY,OAAA;AACZ,gHAAA,iBAAiB,OAAA;AACjB,4GAAA,aAAa,OAAA;AACb,kHAAA,mBAAmB,OAAA;AAErB,8CAA0E;AAAjE,kHAAA,qBAAqB,OAAA;AAAE,4GAAA,eAAe,OAAA;AAC/C,0CASwB;AARtB,wGAAA,aAAa,OAAA;AACb,+GAAA,oBAAoB,OAAA;AACpB,wGAAA,aAAa,OAAA;AACb,oGAAA,SAAS,OAAA;AACT,iHAAA,sBAAsB,OAAA;AACtB,0GAAA,eAAe,OAAA;AACf,wGAAA,aAAa,OAAA;AACb,oGAAA,SAAS,OAAA;AAEX,0DAGgC;AAF9B,0HAAA,uBAAuB,OAAA;AACvB,wHAAA,qBAAqB,OAAA","sourcesContent":["export { TermTransformer } from './transformers/TermTransformer';\nexport {\n  OverloadTree,\n} from './functions/OverloadTree';\nexport { prepareEvaluatorActionContext } from './util/Context';\nexport {\n  declare,\n  bool,\n  string,\n  double,\n  integer,\n  dateTime,\n  langString,\n  decimal,\n  float,\n  expressionToVar,\n  Builder,\n} from './functions/Helpers';\nexport {\n  ExpressionError,\n  isExpressionError,\n  EmptyAggregateError,\n  RDFEqualTypeError,\n  IncompatibleLanguageOperation,\n  InvalidTimezoneCall,\n  InvalidArgumentTypes,\n  CoalesceError,\n  InError,\n  NoAggregator,\n  UnboundVariableError,\n  CastError,\n  ExtensionFunctionError,\n  InvalidLexicalForm,\n  InvalidArity,\n} from './util/Errors';\nexport {\n  typedLiteral,\n  TypeURL,\n  TypeAlias,\n  SparqlOperator,\n  NamedOperator,\n  GeneralOperator,\n  KnownOperator,\n  KnownLiteralTypes,\n} from './util/Consts';\nexport { isSubTypeOf } from './util/TypeHandling';\nexport {\n  dayTimeDurationsToSeconds,\n  defaultedDateTimeRepresentation,\n  defaultedDayTimeDurationRepresentation,\n  defaultedDurationRepresentation,\n  defaultedYearMonthDurationRepresentation,\n  extractRawTimeZone,\n  negateDuration,\n  toDateTimeRepresentation,\n  toUTCDate,\n  yearMonthDurationsToMonths,\n} from './util/DateTimeHelpers';\nexport {\n  DateTimeLiteral,\n  DayTimeDurationLiteral,\n  DateLiteral,\n  DurationLiteral,\n  TimeLiteral,\n  LangStringLiteral,\n  Term,\n  YearMonthDurationLiteral,\n  Quad,\n  Operator,\n  NamedNode,\n  Variable,\n  NumericLiteral,\n  BooleanLiteral,\n  BlankNode,\n  DecimalLiteral,\n  DefaultGraph,\n  DoubleLiteral,\n  Aggregate,\n  Existence,\n  Literal,\n  IntegerLiteral,\n  FloatLiteral,\n  NonLexicalLiteral,\n  StringLiteral,\n  isNonLexicalLiteral,\n} from './expressions';\nexport { addDurationToDateTime, elapsedDuration } from './util/SpecAlgos';\nexport {\n  parseDateTime,\n  parseDayTimeDuration,\n  parseDuration,\n  parseTime,\n  parseYearMonthDuration,\n  parseXSDDecimal,\n  parseXSDFloat,\n  parseDate,\n} from './util/Parsing';\nexport {\n  trimToYearMonthDuration,\n  trimToDayTimeDuration,\n} from './util/DateTimeHelpers';\n"]}