{"version":3,"file":"TermFunctionSha1.js","sourceRoot":"","sources":["TermFunctionSha1.ts"],"names":[],"mappings":";;;AAAA,yEAAkE;AAElE,qFAI8C;AAC9C,qCAA+B;AAE/B;;GAEG;AACH,MAAa,gBAAiB,SAAQ,uCAAgB;IACpD;QACE,KAAK,CAAC;YACJ,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,2CAAc,CAAC,IAAI;YAC7B,SAAS,EAAE,IAAA,oCAAO,EAAC,2CAAc,CAAC,IAAI,CAAC;iBACpC,cAAc,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAA,mCAAM,EAAC,IAAA,cAAI,GAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;iBACrE,OAAO,EAAE;SACb,CAAC,CAAC;IACL,CAAC;CACF;AAVD,4CAUC","sourcesContent":["import { TermFunctionBase } from '@comunica/bus-function-factory';\n\nimport {\n  declare,\n  SparqlOperator,\n  string,\n} from '@comunica/utils-expression-evaluator';\nimport { sha1 } from 'hash.js';\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-sha1\n */\nexport class TermFunctionSha1 extends TermFunctionBase {\n  public constructor() {\n    super({\n      arity: 1,\n      operator: SparqlOperator.SHA1,\n      overloads: declare(SparqlOperator.SHA1)\n        .onString1Typed(() => str => string(sha1().update(str).digest('hex')))\n        .collect(),\n    });\n  }\n}\n"]}