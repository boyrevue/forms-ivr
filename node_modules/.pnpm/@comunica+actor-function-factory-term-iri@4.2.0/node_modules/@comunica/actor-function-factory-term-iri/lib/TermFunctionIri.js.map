{"version":3,"file":"TermFunctionIri.js","sourceRoot":"","sources":["TermFunctionIri.ts"],"names":[],"mappings":";;;AAAA,yEAAkE;AAClE,+DAA0D;AAE1D,qFAI8C;AAC9C,uEAAyE;AAEzE;;GAEG;AACH,MAAa,eAAgB,SAAQ,uCAAgB;IACnD;QACE,KAAK,CAAC;YACJ,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,2CAAc,CAAC,GAAG;YAC5B,SAAS,EAAE,IAAA,oCAAO,EAAC,2CAAc,CAAC,GAAG,CAAC;iBACnC,GAAG,CAAC,CAAE,WAAW,CAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE;gBACzC,MAAM,GAAG,GAAe,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,GAAG,GAAG,IAAA,kCAAkB,EAAC,GAAG,CAAC,GAAG,EAAE,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,+BAAa,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC7F,OAAO,IAAI,sCAAS,CAAC,GAAG,CAAC,CAAC;YAC5B,CAAC,CAAC;iBACD,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC7B,MAAM,GAAG,GAAG,IAAA,kCAAkB,EAAC,GAAG,CAAC,GAAG,EAAE,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,+BAAa,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC7F,OAAO,IAAI,sCAAS,CAAC,GAAG,CAAC,CAAC;YAC5B,CAAC,CAAC;iBACD,OAAO,EAAE;SACb,CAAC,CAAC;IACL,CAAC;CACF;AAlBD,0CAkBC","sourcesContent":["import { TermFunctionBase } from '@comunica/bus-function-factory';\nimport { KeysInitQuery } from '@comunica/context-entries';\n\nimport {\n  declare,\n  NamedNode,\n  SparqlOperator,\n} from '@comunica/utils-expression-evaluator';\nimport { resolve as resolveRelativeIri } from 'relative-to-absolute-iri';\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-iri\n */\nexport class TermFunctionIri extends TermFunctionBase {\n  public constructor() {\n    super({\n      arity: 1,\n      operator: SparqlOperator.IRI,\n      overloads: declare(SparqlOperator.IRI)\n        .set([ 'namedNode' ], exprEval => (args) => {\n          const lit = <NamedNode> args[0];\n          const iri = resolveRelativeIri(lit.str(), exprEval.context.get(KeysInitQuery.baseIRI) ?? '');\n          return new NamedNode(iri);\n        })\n        .onString1(exprEval => (lit) => {\n          const iri = resolveRelativeIri(lit.str(), exprEval.context.get(KeysInitQuery.baseIRI) ?? '');\n          return new NamedNode(iri);\n        })\n        .collect(),\n    });\n  }\n}\n"]}