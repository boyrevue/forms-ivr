{"version":3,"file":"TermFunctionLesserThan.js","sourceRoot":"","sources":["TermFunctionLesserThan.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ITermFunction } from '@comunica/bus-function-factory';\nimport { TermFunctionBase } from '@comunica/bus-function-factory';\nimport { KeysExpressionEvaluator } from '@comunica/context-entries';\nimport type { IInternalEvaluator } from '@comunica/types';\nimport type {\n  BooleanLiteral,\n  Term,\n  DayTimeDurationLiteral,\n  Quad,\n  TimeLiteral,\n  YearMonthDurationLiteral,\n} from '@comunica/utils-expression-evaluator';\nimport {\n  bool,\n  dayTimeDurationsToSeconds,\n  declare,\n  defaultedDateTimeRepresentation,\n  defaultedDayTimeDurationRepresentation,\n  defaultedYearMonthDurationRepresentation,\n  SparqlOperator,\n  toUTCDate,\n  TypeURL,\n  yearMonthDurationsToMonths,\n} from '@comunica/utils-expression-evaluator';\n\nexport class TermFunctionLesserThan extends TermFunctionBase {\n  public constructor(private readonly equalityFunction: ITermFunction) {\n    super({\n      arity: 2,\n      operator: SparqlOperator.LT,\n      overloads: declare(SparqlOperator.LT)\n        .numberTest(() => (left, right) => left < right)\n        .stringTest(() => (left, right) => left.localeCompare(right) === -1)\n        .booleanTest(() => (left, right) => left < right)\n        .dateTimeTest(exprEval => (left, right) =>\n          toUTCDate(left, exprEval.context.getSafe(KeysExpressionEvaluator.defaultTimeZone)).getTime() <\n          toUTCDate(right, exprEval.context.getSafe(KeysExpressionEvaluator.defaultTimeZone)).getTime())\n        .copy({\n          // https://www.w3.org/TR/xpath-functions/#func-date-less-than\n          from: [ TypeURL.XSD_DATE_TIME, TypeURL.XSD_DATE_TIME ],\n          to: [ TypeURL.XSD_DATE, TypeURL.XSD_DATE ],\n        })\n        .set([ TypeURL.XSD_YEAR_MONTH_DURATION, TypeURL.XSD_YEAR_MONTH_DURATION ], () =>\n          ([ dur1L, dur2L ]: [YearMonthDurationLiteral, YearMonthDurationLiteral]) =>\n            // https://www.w3.org/TR/xpath-functions/#func-yearMonthDuration-less-than\n            bool(yearMonthDurationsToMonths(defaultedYearMonthDurationRepresentation(dur1L.typedValue)) <\n              yearMonthDurationsToMonths(defaultedYearMonthDurationRepresentation(dur2L.typedValue))))\n        .set([ TypeURL.XSD_DAY_TIME_DURATION, TypeURL.XSD_DAY_TIME_DURATION ], () =>\n          ([ dur1, dur2 ]: [DayTimeDurationLiteral, DayTimeDurationLiteral]) =>\n            // https://www.w3.org/TR/xpath-functions/#func-dayTimeDuration-greater-than\n            bool(dayTimeDurationsToSeconds(defaultedDayTimeDurationRepresentation(dur1.typedValue)) <\n              dayTimeDurationsToSeconds(defaultedDayTimeDurationRepresentation(dur2.typedValue))))\n        .set([ TypeURL.XSD_TIME, TypeURL.XSD_TIME ], exprEval =>\n          ([ time1, time2 ]: [TimeLiteral, TimeLiteral]) =>\n            // https://www.w3.org/TR/xpath-functions/#func-time-less-than\n            bool(\n              toUTCDate(\n                defaultedDateTimeRepresentation(time1.typedValue),\n                exprEval.context.getSafe(KeysExpressionEvaluator.defaultTimeZone),\n              ).getTime() <\n              toUTCDate(\n                defaultedDateTimeRepresentation(time2.typedValue),\n                exprEval.context.getSafe(KeysExpressionEvaluator.defaultTimeZone),\n              ).getTime(),\n            ))\n        .set(\n          [ 'quad', 'quad' ],\n          exprEval => ([ left, right ]: [Quad, Quad]) => {\n            const subjectTest = this.quadComponentTest(left.subject, right.subject, exprEval);\n            if (subjectTest !== undefined) {\n              return bool(subjectTest);\n            }\n            const predicateTest = this.quadComponentTest(left.predicate, right.predicate, exprEval);\n            if (predicateTest !== undefined) {\n              return bool(predicateTest);\n            }\n            const objectTest = this.quadComponentTest(left.object, right.object, exprEval);\n            if (objectTest !== undefined) {\n              return bool(objectTest);\n            }\n            return bool(this.quadComponentTest(left.graph, right.graph, exprEval) ?? false);\n          },\n          false,\n        )\n        .collect(),\n    });\n  }\n\n  private quadComponentTest(left: Term, right: Term, exprEval: IInternalEvaluator): boolean | undefined {\n    // If components are equal, we don't have an answer\n    const componentEqual = this.equalityFunction.applyOnTerms(\n      [ left, right ],\n      exprEval,\n    );\n    if ((<BooleanLiteral> componentEqual).typedValue) {\n      return undefined;\n    }\n\n    const componentLess = this.applyOnTerms(\n      [ left, right ],\n      exprEval,\n    );\n    return (<BooleanLiteral>componentLess).typedValue;\n  }\n}\n"]}