{"version":3,"file":"TermFunctionXsdToDate.js","sourceRoot":"","sources":["TermFunctionXsdToDate.ts"],"names":[],"mappings":";;;AAAA,yEAAkE;AAMlE,qFAK8C;AAE9C,MAAa,qBAAsB,SAAQ,uCAAgB;IACzD;QACE,KAAK,CAAC;YACJ,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,oCAAO,CAAC,QAAQ;YAC1B,SAAS,EAAE,IAAA,oCAAO,EAAC,oCAAO,CAAC,QAAQ,CAAC;iBACjC,OAAO,CAAC,oCAAO,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC,GAAgB,EAAE,EAAE,CAAC,IAAI,wCAAW,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;iBACpG,OAAO,CAAC,oCAAO,CAAC,aAAa,EAAE,GAAG,EAAE,CAAC,CAAC,GAAoB,EAAE,EAAE,CAC7D,IAAI,wCAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;iBACjC,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC,GAAS,EAAE,EAAE,CAAC,IAAI,wCAAW,CAAC,IAAA,sCAAS,EAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;iBACvE,OAAO,EAAE;SACb,CAAC,CAAC;IACL,CAAC;CACF;AAbD,sDAaC","sourcesContent":["import { TermFunctionBase } from '@comunica/bus-function-factory';\nimport type {\n  Term,\n\n  DateTimeLiteral,\n} from '@comunica/utils-expression-evaluator';\nimport {\n  DateLiteral,\n  declare,\n  parseDate,\n  TypeURL,\n} from '@comunica/utils-expression-evaluator';\n\nexport class TermFunctionXsdToDate extends TermFunctionBase {\n  public constructor() {\n    super({\n      arity: 1,\n      operator: TypeURL.XSD_DATE,\n      overloads: declare(TypeURL.XSD_DATE)\n        .onUnary(TypeURL.XSD_DATE, () => (val: DateLiteral) => new DateLiteral(val.typedValue, val.strValue))\n        .onUnary(TypeURL.XSD_DATE_TIME, () => (val: DateTimeLiteral) =>\n          new DateLiteral(val.typedValue))\n        .onStringly1(() => (val: Term) => new DateLiteral(parseDate(val.str())))\n        .collect(),\n    });\n  }\n}\n"]}