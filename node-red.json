[
  {
    "id": "f-form-bot",
    "type": "tab",
    "label": "Forms Bot",
    "disabled": false,
    "info": ""
  },
  {
    "id": "in-next",
    "type": "http in",
    "z": "f-form-bot",
    "name": "GET /next",
    "url": "/next",
    "method": "get",
    "upload": false,
    "swaggerDoc": "",
    "x": 130,
    "y": 80,
    "wires": [["exec-build"],[]]
  },
  {
    "id": "exec-build",
    "type": "exec",
    "z": "f-form-bot",
    "command": "sh -lc 'node scripts/answers-to-rdf.mjs --json answers.json --out out/answers.ttl --form-id form1 && node scripts/rdf-to-plan.mjs --instances out/instances.ttl --shapes out/shapes.ttl --answers out/answers.ttl --form-id form1 --out out/plan.json'",
    "addpay": false,
    "append": "",
    "useSpawn": "false",
    "timer": "",
    "winHide": false,
    "oldrc": false,
    "name": "build plan",
    "x": 340,
    "y": 80,
    "wires": [["exec-q"],[],[]]
  },
  {
    "id": "exec-q",
    "type": "exec",
    "z": "f-form-bot",
    "command": "node scripts/plan-to-question.mjs --instances out/instances.ttl --plan out/plan.json",
    "addpay": false,
    "append": "",
    "useSpawn": "false",
    "timer": "",
    "winHide": false,
    "oldrc": false,
    "name": "plan → question",
    "x": 560,
    "y": 80,
    "wires": [["as-json"],[],[]]
  },
  {
    "id": "as-json",
    "type": "change",
    "z": "f-form-bot",
    "name": "Content-Type: application/json",
    "rules": [{"t":"set","p":"headers","pt":"msg","to":"{\"content-type\":\"application/json\"}","tot":"json"}],
    "x": 800,
    "y": 80,
    "wires": [["out-next"]]
  },
  {
    "id": "out-next",
    "type": "http response",
    "z": "f-form-bot",
    "name": "",
    "statusCode": "",
    "headers": {},
    "x": 1030,
    "y": 80,
    "wires": []
  },
  {
    "id": "in-answer",
    "type": "http in",
    "z": "f-form-bot",
    "name": "POST /answer",
    "url": "/answer",
    "method": "post",
    "upload": false,
    "swaggerDoc": "",
    "x": 130,
    "y": 180,
    "wires": [["json-body"],[]]
  },
  {
    "id": "json-body",
    "type": "json",
    "z": "f-form-bot",
    "name": "parse JSON",
    "property": "payload",
    "action": "",
    "pretty": false,
    "x": 320,
    "y": 180,
    "wires": [["mk-cmd"]]
  },
  {
    "id": "mk-cmd",
    "type": "function",
    "z": "f-form-bot",
    "name": "build upsert cmd",
    "func": "const f = msg.payload.field; const v = msg.payload.value;\nif (!f || (v === undefined)) { node.error('Missing field/value'); return null; }\nmsg.payload = `node scripts/upsert-answer.mjs --field ${f} --value ${JSON.stringify(v)} --json answers.json --form form1`;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 530,
    "y": 180,
    "wires": [["exec-upsert"]]
  },
  {
    "id": "exec-upsert",
    "type": "exec",
    "z": "f-form-bot",
    "command": "",
    "addpay": true,
    "append": "",
    "useSpawn": "false",
    "timer": "",
    "winHide": false,
    "oldrc": false,
    "name": "upsert answer",
    "x": 730,
    "y": 180,
    "wires": [["exec-build-2"],[],[]]
  },
  {
    "id": "exec-build-2",
    "type": "exec",
    "z": "f-form-bot",
    "command": "sh -lc 'node scripts/answers-to-rdf.mjs --json answers.json --out out/answers.ttl --form-id form1 && node scripts/rdf-to-plan.mjs --instances out/instances.ttl --shapes out/shapes.ttl --answers out/answers.ttl --form-id form1 --out out/plan.json'",
    "addpay": false,
    "append": "",
    "useSpawn": "false",
    "timer": "",
    "winHide": false,
    "oldrc": false,
    "name": "rebuild plan",
    "x": 170,
    "y": 240,
    "wires": [["exec-q-2"],[],[]]
  },
  {
    "id": "exec-q-2",
    "type": "exec",
    "z": "f-form-bot",
    "command": "node scripts/plan-to-question.mjs --instances out/instances.ttl --plan out/plan.json",
    "addpay": false,
    "append": "",
    "useSpawn": "false",
    "timer": "",
    "winHide": false,
    "oldrc": false,
    "name": "plan → question",
    "x": 380,
    "y": 240,
    "wires": [["as-json-2"],[],[]]
  },
  {
    "id": "as-json-2",
    "type": "change",
    "z": "f-form-bot",
    "name": "Content-Type: application/json",
    "rules": [{"t":"set","p":"headers","pt":"msg","to":"{\"content-type\":\"application/json\"}","tot":"json"}],
    "x": 610,
    "y": 240,
    "wires": [["out-answer"]]
  },
  {
    "id": "out-answer",
    "type": "http response",
    "z": "f-form-bot",
    "name": "",
    "statusCode": "",
    "headers": {},
    "x": 840,
    "y": 240,
    "wires": []
  }
]

